# Generated by Django 3.2.15 on 2022-09-25 21:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('active', models.BooleanField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'action',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BaseBlacklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('ip', 'ip'), ('name', 'name'), ('email', 'email'), ('phone', 'phone'), ('card_num', 'card_num')], max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('card_num', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('ip', models.CharField(blank=True, max_length=30, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BaseTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=30)),
                ('card_num', models.CharField(max_length=30)),
                ('ip', models.CharField(max_length=30)),
                ('merchant', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(blank=True, max_length=3, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('transaction_status', models.BooleanField(default=False)),
                ('third_secure', models.BooleanField(default=False)),
                ('message', models.TextField(blank=True, null=True)),
                ('rule', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(blank=True, choices=[('amount', 'amount'), ('VPN', 'VPN'), ('num refuse transaction with card number today', 'num refuse transaction with card number today'), ('num refuse transaction with email today', 'num refuse transaction with email today'), ('num refuse transaction with phone today', 'num refuse transaction with phone today'), ('num refuse transaction with name today', 'num refuse transaction with name today'), ('num refuse transaction with ip today', 'num refuse transaction with ip today'), ('num transaction with card number today', 'num transaction with card number today'), ('num transaction with email today', 'num transaction with email today'), ('num transaction with phone today', 'num transaction with phone today'), ('num transaction with name today', 'num transaction with name today'), ('num transaction with ip today', 'num transaction with ip today'), ('num refuse transaction with card number month', 'num refuse transaction with card number month'), ('num refuse transaction with email month', 'num refuse transaction with email month'), ('num refuse transaction with phone month', 'num refuse transaction with phone month'), ('num refuse transaction with name month', 'num refuse transaction with name month'), ('num refuse transaction with ip month', 'num refuse transaction with ip month'), ('num transaction with card number month', 'num transaction with card number month'), ('num transaction with email month', 'num transaction with email month'), ('num transaction with phone month', 'num transaction with phone month'), ('num transaction with name month', 'num transaction with name month'), ('num transaction with ip month', 'num transaction with ip month')], max_length=255, null=True)),
                ('compare_type', models.CharField(blank=True, choices=[('more than', 'more than'), ('less than', 'less than'), ('equal', 'equal'), ('more than or equal', 'more than or equal'), ('less than or equal', 'less than or equal')], max_length=255, null=True)),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'conditions',
            },
        ),
        migrations.CreateModel(
            name='Blacklist',
            fields=[
                ('baseblacklist_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fraud.baseblacklist')),
                ('merchant', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'blacklist',
            },
            bases=('fraud.baseblacklist',),
        ),
        migrations.CreateModel(
            name='GlobalBlacklist',
            fields=[
                ('baseblacklist_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fraud.baseblacklist')),
            ],
            options={
                'db_table': 'global_blacklist',
            },
            bases=('fraud.baseblacklist',),
        ),
        migrations.CreateModel(
            name='GlobalWhitelist',
            fields=[
                ('baseblacklist_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fraud.baseblacklist')),
            ],
            options={
                'db_table': 'global_whitelist',
            },
            bases=('fraud.baseblacklist',),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('basetransaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fraud.basetransaction')),
                ('reviewed', models.BooleanField(default=False)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_action', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'review',
            },
            bases=('fraud.basetransaction',),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('basetransaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fraud.basetransaction')),
            ],
            options={
                'db_table': 'transaction',
            },
            bases=('fraud.basetransaction',),
        ),
        migrations.CreateModel(
            name='Whitelist',
            fields=[
                ('baseblacklist_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fraud.baseblacklist')),
                ('merchant', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'whitelist',
            },
            bases=('fraud.baseblacklist',),
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField()),
                ('priority', models.IntegerField()),
                ('description', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action', models.ManyToManyField(to='fraud.Action')),
                ('condition', models.ManyToManyField(to='fraud.Condition')),
            ],
            options={
                'db_table': 'rules',
            },
        ),
    ]
